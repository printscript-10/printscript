[
  {
    "token":"WHITESPACE",
    "regex": "\\s+"
  },
  {
    "token": "STRING",
    "regex": "\"[^\"]*\"|'[^']*'"
  },
  {
    "token": "VARIABLE_DECLARATOR",
    "regex": "\\b(let|const)\\b"
  },
  {
    "token": "BOOLEAN",
    "regex": "\\b(true|false)\\b"
  },
  {
    "token": "TYPE",
    "regex": "\\b(string|number|boolean)\\b"
  },
  {
    "token": "PRINT",
    "regex": "\\b(println)\\b"
  },
  {
    "token": "READ_INPUT",
    "regex": "\\b(readInput)\\b"
  },
  {
    "token": "READ_ENV",
    "regex": "\\b(readEnv)\\b"
  },
  {
    "token": "IDENTIFIER",
    "regex": "[a-zA-Z_][a-zA-Z0-9_]*"
  },
  {
    "token": "NUMBER",
    "regex": "\\b-?\\d+(\\.\\d+)?\\b"
  },
  {
    "token": "COLON",
    "regex": ":"
  },
  {
    "token": "SEMICOLON",
    "regex": ";"
  },
  {
    "token": "OPEN_BRACKET",
    "regex": "\\("
  },
  {
    "token": "CLOSE_BRACKET",
    "regex": "\\)"
  },
  {
    "token": "OPEN_BRACE",
    "regex": "\\{"
  },
  {
    "token": "CLOSE_BRACE",
    "regex": "\\}"
  },
  {
    "token": "BINARY_OPERATOR",
    "regex": "\\+|\\-|\\*|\\/"
  },
  {
    "token": "ASSIGN",
    "regex": "="
  }
]
